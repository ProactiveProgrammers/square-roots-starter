setup: |
  cd squareroot && poetry install
  echo "Done installing project dependencies!"
---

# Reminder for ^^^:
# All commands executed in the setup block are done in a
# one-by-one fashion from the current working directory. This means
# that there is no history associated with running the commands and
# thus multiple commands must be run in a single chain.

# perform checks on a file
- squareroot/squareroot/main.py:
    - description: Ensure that the main.py file exists in the squareroot/squareroot/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs, remove the TODO markers, and rewrite comments for main.py
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Create a sufficient number of docstring (i.e., multiple-line) comments in main.py
      check: CountMultipleLineComments
      options:
        language: "Python"
        count: 6
        exact: false
    - description: Create a sufficient number of single-line comments in main.py
      check: CountSingleLineComments
      options:
        language: "Python"
        count: 25
        exact: false

# perform checks on a file
- compare/tests/test_squareroot.py.py:
    - description: Ensure that the test_squareroot.py.py file exists in the compare/tests/ directory
      check: ConfirmFileExists
    - description: Complete all TODOs, remove the TODO markers, and rewrite comments for test_squareroot.py.py
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Create a sufficient number of docstring (i.e., multiple-line) comments in test_squareroot.py.py
      check: CountMultipleLineComments
      options:
        language: "Python"
        count: 3
        exact: false
    - description: Ensure that there are at least three test cases inside the test suite
      check: MatchFileFragment
      options:
        fragment: "test_"
        count: 3
        exact: false

# --> check the technical writing for various characteristics
writing/reflection.md:
    ConfirmFileExists
    CountFileWords --count 500
    CountMarkdownTags --tag "heading" --count 14
    CountMarkdownTags --tag "code_block" --count 4
    MatchFileFragment --fragment "TODO" --count 0 --exact
    MatchFileFragment --fragment "Add Your Name Here" --count 0 --exact

# --> check that the number of commits in the Git repository is beyond a threshold
CountCommits --count 5
